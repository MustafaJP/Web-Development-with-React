{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","CommentForm","toggleModal","bind","handleSubmit","state","isModalOpen","values","this","postComment","dishId","rating","author","comment","setState","navbar","outline","onClick","isOpen","toggle","onSubmit","htmlFor","sm","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","role","md","size","offset","checkbox","RenderLeader","tag","left","middle","object","body","heading","Rendering","leaders","About","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addleaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yB,QCMvB,SAASC,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAClC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAAC,gBAAD,CAAeC,IAAE,EAACC,eAAgB,CAC9BC,cAAe,gCAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAC9C,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAYT,EAAKS,MAChBT,EAAKU,YAAc,kBAAC,IAAD,KAAeV,EAAKU,aAA8B,KACtE,kBAAC,IAAD,KAAWV,EAAKW,gBAyBrBC,MAlBf,SAAcC,GACV,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMC,KAAMb,UAAWY,EAAME,cAAeb,QAASW,EAAMG,iBAEjF,yBAAKnB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMI,UAAWhB,UAAWY,EAAMK,aAAchB,QAASW,EAAMM,gBAErF,yBAAKtB,UAAU,qBACX,kBAACE,EAAD,CAAYC,KAAMa,EAAMO,OAAQnB,UAAWY,EAAMQ,eAAgBnB,QAASW,EAAMS,qB,OCvCpG,SAASC,EAAT,GAAkC,IAART,EAAO,EAAPA,KACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMU,GAAE,gBAAWV,EAAKW,KACtB,kBAAC,IAAD,CAASC,MAAM,OAAOpB,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYK,EAAKL,SAM7B,IAgDekB,EAhDF,SAACd,GACZ,IAAMe,EAAOf,EAAMgB,OAAOA,OAAOC,KAAI,SAAChB,GAClC,OACI,yBAAKjB,UAAU,sBAAsBkC,IAAKjB,EAAKW,IAC3C,kBAACF,EAAD,CAAgBT,KAAMA,QAIlC,OAAID,EAAMgB,OAAO5B,UAEX,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKLgB,EAAMgB,OAAO3B,QAEd,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKgB,EAAMgB,OAAO3B,YAQlC,yBAAKL,UAAU,aACb,yBAAKA,UAAW,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,SAEF,yBAAKnC,UAAU,UACb,oCACA,+BAGJ,yBAAKA,UAAU,OACZ+B,K,eCpDLK,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGvDC,E,kDACJ,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,MAAQ,CACXC,aAAa,GALE,E,yDAQNC,GACXC,KAAKN,cACLM,KAAKhC,MAAMiC,YAAYD,KAAKhC,MAAMkC,OAAQH,EAAOI,OAAQJ,EAAOK,OAAQL,EAAOM,W,oCAG/EL,KAAKM,SAAS,CACZR,aAAcE,KAAKH,MAAMC,gB,+BAGlB,IApBMN,EAoBP,OACR,OACE,6BACE,kBAAC,IAAD,CAAKxC,UAAU,UAAUuD,QAAM,GAC7B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,SAAO,EAACC,QAAST,KAAKN,aAAa,0BAAM1C,UAAU,uBAA3D,sBAGN,kBAAC,IAAD,CAAO0D,OAAQV,KAAKH,MAAMC,YAAaa,OAAQX,KAAKN,aAClD,kBAAC,IAAD,CAAaiB,OAAQX,KAAKN,aAA1B,mBACA,kBAAC,IAAD,KACE,kBAAC,YAAD,CAAWkB,SAAU,SAACb,GAAD,OAAY,EAAKH,aAAaG,KACjD,kBAAC,IAAD,CAAK/C,UAAU,cACb,kBAAC,IAAD,CAAO6D,QAAQ,SAASC,GAAI,IAA5B,UACA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQC,OAAT,CAAgBC,MAAM,UAAUpC,GAAG,SAAShB,KAAK,SAC/CZ,UAAU,gBACV,qCACA,qCACA,qCACA,qCACA,qCACA,wCAIN,kBAAC,IAAD,CAAKA,UAAU,cACb,kBAAC,IAAD,CAAO6D,QAAQ,SAASC,GAAI,IAA5B,UACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQG,KAAT,CAAcD,MAAM,UAAUpC,GAAG,SAAShB,KAAK,SAC7CsD,YAAY,SACZlE,UAAU,eACVmE,WAAY,CACR/B,WAAUgC,WArDjB5B,EAqDsC,EArD9B,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IAqDGD,UAAWA,EAAU,OAG9D,kBAAC,SAAD,CACEvC,UAAU,cACVgE,MAAM,UACNK,KAAK,UACLC,SAAU,CACNlC,SAAU,WACVgC,UAAW,oCACX7B,UAAW,qCAKvB,kBAAC,IAAD,CAAKvC,UAAU,cACb,kBAAC,IAAD,CAAO6D,QAAQ,UAAUC,GAAI,IAA7B,YACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQS,SAAT,CAAkBP,MAAM,WAAWpC,GAAG,UAAUhB,KAAK,UACjD4D,KAAK,KACLxE,UAAU,eACVmE,WAAY,CAAC/B,gBAIvB,kBAAC,IAAD,CAAKpC,UAAU,cACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQyE,KAAK,SAASC,MAAM,WAA5B,oB,GA9EMC,aA2F1B,SAASC,EAAT,GAA6B,IAAR3D,EAAO,EAAPA,KACnB,OAAY,MAARA,EAEA,kBAAC,gBAAD,CAAeX,IAAE,EAACC,eAAgB,CAChCC,cAAe,gCAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASqE,KAAG,EAACpE,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAClD,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAYK,EAAKL,MACjB,kBAAC,IAAD,KAAWK,EAAKH,gBAOxB,8BAIN,SAASgE,EAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,SAAU9B,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAC9C,OAAgB,MAAZ6B,EAEA,6BACE,wCACA,wBAAI/E,UAAY,iBACd,kBAAC,UAAD,CAASM,IAAE,GACRyE,EAAS9C,KAAI,SAACoB,GACb,OACE,kBAAC,OAAD,CAAM/C,IAAE,GACR,wBAAI4B,IAAKmB,EAAQzB,IACjB,2BAAIyB,EAAQA,SACZ,iCAAOA,EAAQD,OAAf,MAA0B,IAAI4B,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAMlC,EAAQmC,gBAO1J,kBAAC,EAAD,CAAatC,OAAQA,EAAQD,YAAaA,KAK5C,8BAIN,IAgDewC,EAhDK,SAACzE,GACnB,OAAIA,EAAMZ,UAEJ,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKLgB,EAAMX,QAEP,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKgB,EAAMX,WAKJ,MAAdW,EAAMC,KAEX,yBAAKjB,UAAU,aACb,yBAAKA,UAAW,OACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAEnB,EAAMC,KAAKL,OAErC,yBAAKZ,UAAU,UACb,4BAAKgB,EAAMC,KAAKL,MAChB,+BAGJ,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,uBACb,kBAAC4E,EAAD,CAAY3D,KAAMD,EAAMC,QAE1B,yBAAKjB,UAAU,uBACf,kBAAC8E,EAAD,CAAgBC,SAAU/D,EAAM+D,SAAU9B,YAAajC,EAAMiC,YAAaC,OAAQlC,EAAMC,KAAKW,QAOjG,+BC9FS8D,E,kDAjGX,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IACD2E,UAAY,EAAKA,UAAUhD,KAAf,gBACjB,EAAKD,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKiD,YAAc,EAAKA,YAAYjD,KAAjB,gBACnB,EAAKE,MAAQ,CACXgD,WAAW,EACX/C,aAAa,GAPA,E,wDAWfE,KAAKM,SAAS,CACduC,WAAY7C,KAAKH,MAAMgD,c,oCAIvB7C,KAAKM,SAAS,CACZR,aAAcE,KAAKH,MAAMC,gB,kCAGnBgD,GACR9C,KAAKN,cACLqD,MAAM,aAAe/C,KAAKgD,SAASC,MAAQ,cAAgBjD,KAAKkD,SAASD,MACnE,cAAgBjD,KAAKmD,SAASC,SACpCN,EAAMO,mB,+BAEA,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,CAAQC,MAAI,EAACC,OAAO,MAChB,yBAAKvG,UAAU,aACX,kBAAC,IAAD,CAAeyD,QAAST,KAAK2C,YAC7B,kBAAC,IAAD,CAAa3F,UAAU,UAAUwG,KAAK,KAAI,yBAAK/F,IAAI,yBAAyBgG,OAAO,KAAK5E,MAAM,KAAKlB,IAAI,2BACvG,kBAAC,IAAD,CAAU+C,OAAQV,KAAKH,MAAMgD,UAAWtC,QAAM,GAC1C,kBAAC,IAAD,CAAKA,QAAM,GACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASvD,UAAU,WAAY2B,GAAG,SAAQ,0BAAM3B,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW2B,GAAG,YAAW,0BAAM3B,UAAU,qBAA5D,cAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAY2B,GAAG,SAAQ,0BAAM3B,UAAU,qBAA1D,UAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASA,UAAU,WAAW2B,GAAG,cAAa,0BAAM3B,UAAU,6BAA9D,iBAGJ,kBAAC,IAAD,CAAKA,UAAU,UAAUuD,QAAM,GAC3B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,SAAO,EAACC,QAAST,KAAKN,aAAa,0BAAM1C,UAAU,wBAA3D,eAMpB,kBAAC,IAAD,KACI,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAAC,IAAD,CAAO0D,OAAQV,KAAKH,MAAMC,YAAaa,OAAQX,KAAKN,aAChD,kBAAC,IAAD,CAAaiB,OAAQX,KAAKN,aAA1B,SACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAMkB,SAAUZ,KAAK4C,aACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO/B,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOY,KAAK,OAAO7C,GAAG,WAAWhB,KAAK,WAClC8F,SAAU,SAACC,GAAD,OAAW,EAAKX,SAAWW,MAE7C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9C,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOY,KAAK,WAAW7C,GAAG,WAAWhB,KAAK,WACtC8F,SAAU,SAACC,GAAD,OAAW,EAAKT,SAAWS,MAE7C,kBAAC,IAAD,CAAWC,OAAK,GACZ,kBAAC,IAAD,CAAOA,OAAK,GACR,kBAAC,IAAD,CAAOnC,KAAK,WAAW7D,KAAK,WAC5B8F,SAAU,SAACC,GAAD,OAAW,EAAKR,SAAWQ,KAFzC,gBAMJ,kBAAC,IAAD,CAAQlC,KAAK,SAASwB,MAAM,SAASvB,MAAM,WAA3C,iB,GAxFPC,aC8CNkC,MA/Cf,WACI,OACA,yBAAK7G,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAK3B,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGwG,KAAK,6BAAR,wBAI1C,yBAAKxG,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCwG,KAAK,uBAAsB,uBAAGxG,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCwG,KAAK,2CAA0C,uBAAGxG,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCwG,KAAK,+BAA8B,uBAAGxG,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCwG,KAAK,uBAAsB,uBAAGxG,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCwG,KAAK,uBAAsB,uBAAGxG,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBwG,KAAK,WAAU,uBAAGxG,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6ECrCdoC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvD4B,EAAY,SAAC5B,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpDsE,EAAW,SAACzE,GAAD,OAAU0E,MAAMC,OAAO3E,KAClC4E,EAAa,SAAC5E,GAAD,MAAS,4CAA4C6E,KAAK7E,IAyL9D8E,E,kDAtLX,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IACD4B,aAAe,EAAKA,aAAaD,KAAlB,gBAFL,E,yDAINI,GACTC,KAAKhC,MAAMoG,oBACXpE,KAAKhC,MAAMqG,aAAatE,EAAOuE,UAAWvE,EAAOwE,SAAUxE,EAAOyE,OAAQzE,EAAO0E,MAAO1E,EAAO2E,MAAO3E,EAAO4E,YAAa5E,EAAO6E,W,+BAE3H,IAAD,OACL,OACI,yBAAK5H,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,eAEJ,yBAAKnC,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGwG,KAAK,6BAAR,wBAG5C,yBAAKxG,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY6H,KAAK,SAC5B,uBAAGA,KAAK,SAAS7H,UAAU,kBAAkBwG,KAAK,oBAAmB,uBAAGxG,UAAU,gBAAlF,SACA,uBAAG6H,KAAK,SAAS7H,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAG6H,KAAK,SAAS7H,UAAU,kBAAkBwG,KAAK,6BAA4B,uBAAGxG,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,UACZ,sDAEF,yBAAKA,UAAU,mBACX,kBAAC,OAAD,CAAMgE,MAAM,WAAWJ,SAAU,SAACb,GAAD,OAAY,EAAKH,aAAaG,KAC3D,kBAAC,IAAD,CAAK/C,UAAU,cACX,kBAAC,IAAD,CAAO6D,QAAQ,YAAYiE,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQ7D,KAAT,CAAcD,MAAM,aAAapC,GAAG,YAAYhB,KAAK,YACjDsD,YAAY,aACZlE,UAAU,eACVmE,WAAY,CACR/B,WAAUgC,UAAWA,EAAU,GAAI7B,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIvC,UAAU,cACVgE,MAAM,aACNK,KAAK,UACLC,SAAU,CACNlC,SAAU,WACVgC,UAAW,oCACX7B,UAAW,qCAK3B,kBAAC,IAAD,CAAKvC,UAAU,cACX,kBAAC,IAAD,CAAO6D,QAAQ,WAAWiE,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQ7D,KAAT,CAAcD,MAAM,YAAYpC,GAAG,WAAWhB,KAAK,WAC/CsD,YAAY,YACZlE,UAAU,eACVmE,WAAY,CACR/B,WAAUgC,UAAWA,EAAU,GAAI7B,UAAWA,EAAU,OAGhE,kBAAC,SAAD,CACIvC,UAAU,cACVgE,MAAM,YACNK,KAAK,UACLC,SAAU,CACNlC,SAAU,WACVgC,UAAW,oCACX7B,UAAW,qCAK3B,kBAAC,IAAD,CAAKvC,UAAU,cACX,kBAAC,IAAD,CAAO6D,QAAQ,SAASiE,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQ7D,KAAT,CAAcD,MAAM,UAAUpC,GAAG,SAAShB,KAAK,SAC3CsD,YAAY,cACZlE,UAAU,eACVmE,WAAY,CACR/B,WAAUgC,UAAWA,EAAU,GAAI7B,UAAWA,EAAU,IAAKuE,cAGrE,kBAAC,SAAD,CACI9G,UAAU,cACVgE,MAAM,UACNK,KAAK,UACLC,SAAU,CACNlC,SAAU,WACVgC,UAAW,iCACX7B,UAAW,6BACXuE,SAAU,wBAK1B,kBAAC,IAAD,CAAK9G,UAAU,cACX,kBAAC,IAAD,CAAO6D,QAAQ,QAAQiE,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQ7D,KAAT,CAAcD,MAAM,SAASpC,GAAG,QAAQhB,KAAK,QACzCsD,YAAY,QACZlE,UAAU,eACVmE,WAAY,CACR/B,WAAU6E,gBAGlB,kBAAC,SAAD,CACIjH,UAAU,cACVgE,MAAM,SACNK,KAAK,UACLC,SAAU,CACNlC,SAAU,WACV6E,WAAY,6BAK5B,kBAAC,IAAD,CAAKjH,UAAU,cACX,kBAAC,IAAD,CAAK8H,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACvB,yBAAKhI,UAAU,cACX,kBAAC,IAAD,CAAO4G,OAAK,GACR,kBAAC,UAAQqB,SAAT,CAAkBjE,MAAM,SAASpD,KAAK,QAClCZ,UAAU,qBAFlB,IAGa,IACL,0DAIhB,kBAAC,IAAD,CAAK8H,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQjE,OAAT,CAAgBC,MAAM,eAAepD,KAAK,cACtCZ,UAAU,gBACV,wCACA,4CAIZ,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAO6D,QAAQ,UAAUiE,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACL,kBAAC,UAAQvD,SAAT,CAAkBP,MAAM,WAAWpC,GAAG,UAAUhB,KAAK,UACjD4D,KAAK,KACLxE,UAAU,mBAGtB,kBAAC,IAAD,CAAKA,UAAU,cACX,kBAAC,IAAD,CAAK8H,GAAI,CAACC,KAAK,GAAIC,OAAQ,IACvB,kBAAC,IAAD,CAAQvD,KAAK,SAASC,MAAM,WAA5B,2B,GA3KdC,aCJtB,SAASuD,EAAT,GAAgC,IAAT3G,EAAQ,EAARA,OACf,OACI,yBAAKW,IAAKX,EAAOK,GAAI5B,UAAU,eAC3B,kBAAC,UAAD,CAASM,IAAE,GACP,kBAAC,OAAD,CAAMA,IAAE,GACJ,kBAAC,IAAD,CAAO6H,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GACd,kBAAC,IAAD,CAAOC,QAAM,EAAC7H,IAAKR,EAAUsB,EAAOb,MAAOC,IAAKY,EAAOX,QAE3D,kBAAC,IAAD,CAAO2H,MAAI,EAACvI,UAAU,QAClB,kBAAC,IAAD,CAAOwI,SAAO,GAAEjH,EAAOX,MACvB,2BAAIW,EAAOV,aACX,2BAAIU,EAAOT,kBAS3C,SAAS2H,EAAT,GAA4B,IAARzH,EAAO,EAAPA,MACV0H,EAAU1H,EAAM0H,QAAQA,QAAQzG,KAAI,SAACV,GACvC,OACA,yBAAKvB,UAAU,aAAakC,IAAKX,EAAOK,IACpC,kBAACsG,EAAD,CAAchG,IAAKX,EAAOK,GAAIL,OAAQA,QAG9C,OAAIP,EAAM0H,QAAQtI,UAEV,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPgB,EAAM0H,QAAQrI,QAEf,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKgB,EAAM0H,QAAQrI,WAO3BqI,EAuEGC,MAlEf,SAAe3H,GACP,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM2B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,aAEJ,yBAAKnC,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAM4I,MAAM,gBAAZ,0EAQpB,yBAAK5I,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAO6I,MAAI,GACP,kBAACJ,EAAD,CAAWzH,MAASA,S,QC1DnCE,EAAgB,iBAAO,CAChCuD,KC1D0B,mBD4DjBqE,EAAe,SAACC,GAAD,MAAc,CACtCtE,KC5DyB,gBD6DzBuE,QAASD,IAEAE,EAAY,SAACjH,GAAD,MAAa,CAClCyC,KC/DsB,aDgEtBuE,QAAShH,IAsBAkH,EAAiB,SAACH,GAAD,MAAc,CACxCtE,KCrF2B,kBDsF3BuE,QAASD,IAEAI,EAAc,SAACpE,GAAD,MAAe,CACtCN,KC1FwB,eD2FxBuE,QAASjE,IAuBAqE,EAAgB,iBAAO,CAChC3E,KCjH0B,mBDmHjB4E,EAAe,SAACN,GAAD,MAAc,CACtCtE,KClHyB,gBDmHzBuE,QAASD,IAEAO,EAAY,SAACC,GAAD,MAAa,CAClC9E,KCvHsB,aDwHtBuE,QAASO,IAuBA/H,EAAiB,iBAAO,CACnCiD,KC9I6B,oBDgJlB+E,EAAgB,SAACT,GAAD,MAAc,CACzCtE,KC/I4B,iBDgJ5BuE,QAASD,IAEEU,EAAa,SAACf,GAAD,MAAc,CACtCjE,KCpJyB,cDqJzBuE,QAASN,I,QEjILgB,E,kDACJ,WAAY1I,GAAQ,uCACZA,G,gEAGNgC,KAAKhC,MAAM2I,cACX3G,KAAKhC,MAAM4I,gBACX5G,KAAKhC,MAAM6I,cACX7G,KAAKhC,MAAM8I,iB,+BAEH,IAAD,OA4BP,OACE,6BACE,kBAAC,EAAD,MACA,6BACE,kBAAC,kBAAD,KACE,kBAAC,gBAAD,CAAe5H,IAAKc,KAAKhC,MAAM+I,SAAS7H,IAAK8H,WAAW,OAAOC,QAAS,KACtE,kBAAC,IAAD,CAAQF,SAAU/G,KAAKhC,MAAM+I,UACzB,kBAAC,IAAD,CAAOG,KAAK,QAAQC,UAlCjB,WACf,OACE,kBAAC,EAAD,CACAlJ,KAAM,EAAKD,MAAMgB,OAAOA,OAAOoI,QAAO,SAACnJ,GAAD,OAAUA,EAAKoJ,YAAU,GAC/DnJ,cAAe,EAAKF,MAAMgB,OAAO5B,UACjCe,cAAe,EAAKH,MAAMgB,OAAO3B,QACjCe,UAAW,EAAKJ,MAAMsJ,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC9EhJ,aAAc,EAAKL,MAAMsJ,WAAWlK,UACpCkB,aAAc,EAAKN,MAAMsJ,WAAWjK,QACpCkB,OAAQ,EAAKP,MAAM0H,QAAQA,QAAQ0B,QAAO,SAAC7I,GAAD,OAAYA,EAAO8I,YAAU,GACvE7I,eAAgB,EAAKR,MAAM0H,QAAQtI,UACnCqB,eAAgB,EAAKT,MAAM0H,QAAQrI,aAwBzB,kBAAC,IAAD,CAAOmK,OAAK,EAACN,KAAK,WAAWC,UAAW,kBAAM,kBAAC,EAAD,CAAOzB,QAAS,EAAK1H,MAAM0H,aAF7E,OAGI,kBAAC,IAAD,CAAO8B,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAMnI,OAAQ,EAAKhB,MAAMgB,YACpE,kBAAC,IAAD,CAAOkI,KAAK,gBAAgBC,UArBvB,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACnB,OACE,kBAAC,EAAD,CAAYxJ,KAAM,EAAKD,MAAMgB,OAAOA,OAAOoI,QAAO,SAACnJ,GAAD,OAAUA,EAAKW,KAAO8I,SAASD,EAAME,OAAOzH,OAAO,OAAK,GACxG9C,UAAW,EAAKY,MAAMgB,OAAO5B,UAC7BC,QAAS,EAAKW,MAAMgB,OAAO3B,QAC3B0E,SAAU,EAAK/D,MAAM+D,SAASA,SAASqF,QAAO,SAAC/G,GAAD,OAAaA,EAAQH,SAAWwH,SAASD,EAAME,OAAOzH,OAAO,OAC3G0H,gBAAiB,EAAK5J,MAAM+D,SAAS1E,QACrC4C,YAAa,EAAKjC,MAAMiC,iBAehB,kBAAC,IAAD,CAAOuH,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAAS/C,kBAAmB,EAAKpG,MAAMoG,kBAAmBC,aAAc,EAAKrG,MAAMqG,kBACnI,kBAAC,IAAD,CAAU1F,GAAG,cAKvB,kBAAC,EAAD,W,GAvDWgD,aA4DJkG,cAAWC,mBA7EF,SAAAjI,GACtB,MAAO,CACLb,OAAQa,EAAMb,OACd+C,SAAUlC,EAAMkC,SAChBuF,WAAYzH,EAAMyH,WAClB5B,QAAS7F,EAAM6F,YAGQ,SAAAqC,GAAQ,MAAK,CACtC9H,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC0H,EFhBzB,SAAC7H,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAAC0H,GAC/D,IAAMC,EAAa,CACjB9H,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAGX,OADA2H,EAAWxF,MAAO,IAAIF,MAAO2F,cACtBC,MAAMjL,EAAU,WAAY,CACjCkL,OAAQ,OACR5C,KAAM6C,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEdC,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACE,MAAMA,KAEPH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EAjCM,SAAC1H,GAAD,MAAc,CACtCoB,KCJyB,cDKzBuE,QAAS3F,GA+BkB2I,CAAWP,OACrCQ,OAAM,SAAAN,GAAYO,QAAQC,IAAI,gBAAiBR,EAAM/D,SAAU7B,MAAM,4CAA4C4F,EAAM/D,aEd7D3E,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FgE,aAAc,SAACC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OAAqEmD,EF8IzD,SAACzD,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OAAqE,SAACmD,GAChG,IAAMqB,EAAc,CAClB9E,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAIX,OAFAwE,EAAY5G,MAAO,IAAIF,MAAO2F,cAC9BmB,EAAYxK,GAAIwK,EAAY9J,OACrB4I,MAAMjL,EAAU,WAAY,CAC/BkL,OAAQ,OACR5C,KAAM6C,KAAKC,UAAUe,GACrBd,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIV,EArCsB,CACxCtG,KClK0B,eDmK1BuE,QAmCuCyC,OACtCD,MAAK,SAAAC,GAAQ,OAAI1F,MAAM,iCAAmCqF,KAAKC,UAAUI,EAASzC,aAClFiD,OAAM,SAAAN,GAAYO,QAAQC,IAAI,gBAAiBR,EAAM/D,SAAU7B,MAAM,6CAA6C4F,EAAM/D,aEjL7BP,CAAaC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,KACjK+B,YAAa,WAAQoB,GFcU,SAACA,GAE9B,OADAA,EAAS7J,GAAc,IAChBgK,MAAMjL,EAAU,UACtBuL,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAM/D,YAGrC4D,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAxJ,GAAM,OAAI+I,EAAS9B,EAAUjH,OAClCiK,OAAM,SAAAN,GAAK,OAAIZ,EAASjC,EAAa6C,EAAM/D,iBE/B9CR,kBAAmB,WAAQ2D,EAASsB,UAAQC,MAAM,cAClD1C,cAAe,kBAAMmB,GF4CY,SAACA,GAChC,OAAOG,MAAMjL,EAAU,YACtBuL,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAM/D,YAGrC4D,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAzG,GAAQ,OAAIgG,EAAS5B,EAAYpE,OACtCkH,OAAM,SAAAN,GAAK,OAAIZ,EAAS7B,EAAeyC,EAAM/D,iBE5DhDiC,YAAa,kBAAMkB,GFuEY,SAACA,GAE9B,OADAA,EAAS3B,KACF8B,MAAMjL,EAAU,cACtBuL,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAM/D,YAGrC4D,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAjC,GAAM,OAAIwB,EAASzB,EAAUC,OAClC0C,OAAM,SAAAN,GAAK,OAAIZ,EAAS1B,EAAasC,EAAM/D,iBExF9CkC,aAAc,kBAAMiB,GFsGY,SAACA,GAEjC,OADAA,EAASvJ,KACF0J,MAAMjL,EAAU,WACtBuL,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAM/D,YAGrC4D,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA9C,GAAO,OAAIqC,EAAStB,EAAWf,OACpCuD,OAAM,SAAAN,GAAK,OAAIZ,EAASvB,EAAcmC,EAAM/D,oBE1DrBkD,CAA6CpB,I,2BCzF1D6C,GAAS,WAEM,IAFL1J,EAEI,uDAFI,CAAEzC,WAAW,EACxCC,QAAS,KACT2B,OAAO,IAAKwK,EAAW,uCACvB,OAAQA,EAAO/H,MACX,IFFkB,aEGd,OAAO,gBAAI5B,EAAX,CAAkBzC,WAAW,EAAOC,QAAS,KAAM2B,OAAQwK,EAAOxD,UAEtE,IFPsB,iBEQlB,OAAO,gBAAInG,EAAX,CAAkBzC,WAAW,EAAMC,QAAS,KAAM2B,OAAQ,KAE9D,IFTqB,gBEUjB,OAAO,gBAAIa,EAAX,CAAkBzC,WAAW,EAAOC,QAASmM,EAAOxD,UAExD,QACI,OAAOnG,ICfN4J,GAAW,WAAoD,IAAnD5J,EAAkD,uDAA1C,CAAExC,QAAS,KAAM0E,SAAS,IAAKyH,EAAW,uCACvE,OAAQA,EAAO/H,MACX,IHEoB,eGDhB,OAAO,gBAAI5B,EAAX,CAAkBxC,QAAS,KAAM0E,SAAUyH,EAAOxD,UACtD,IHCuB,kBGAnB,OAAO,gBAAInG,EAAX,CAAkBxC,QAASmM,EAAOxD,UACtC,IHPmB,cGQf,IAAI3F,EAAUmJ,EAAOxD,QACrB,OAAO,gBAAKnG,EAAZ,CAAmBkC,SAAUlC,EAAMkC,SAAS2H,OAAOrJ,KACvD,QACI,OAAOR,ICTN8J,GAAa,WAAwE,IAAvE9J,EAAsE,uDAA7D,CAAEzC,WAAW,EAAMC,QAAS,KAAMiK,WAAW,IAAKkC,EAAW,uCAC7F,OAAQA,EAAO/H,MACX,IJIkB,aIHd,OAAO,gBAAI5B,EAAX,CAAkBzC,WAAW,EAAOC,QAAS,KAAMiK,WAAYkC,EAAOxD,UAC1E,IJCsB,iBIAlB,OAAO,gBAAInG,EAAX,CAAkBzC,WAAW,EAAMC,QAAS,KAAMiK,WAAY,KAClE,IJCqB,gBIAjB,OAAO,gBAAIzH,EAAX,CAAkBzC,WAAW,EAAOC,QAASmM,EAAOxD,UACxD,QACE,OAAOnG,ICTJ+J,GAAU,WAGP,IAHQ/J,EAGT,uDAHiB,CAAEzC,WAAW,EACzCC,QAAS,KACTqI,QAAQ,IACR8D,EAAW,uCACX,OAAQA,EAAO/H,MACX,ILImB,cKHf,OAAO,gBAAI5B,EAAX,CAAkBzC,WAAW,EAAOC,QAAS,KAAMqI,QAAS8D,EAAOxD,UAEvE,ILAuB,kBKCnB,OAAO,gBAAInG,EAAX,CAAkBzC,WAAW,EAAMC,QAAS,KAAMqI,QAAS,KAE/D,ILDsB,iBKElB,OAAO,gBAAI7F,EAAX,CAAkBzC,WAAW,EAAOC,QAASmM,EAAOxD,UAExD,QACI,OAAOnG,I,wCCfNgK,GAAkB,CAC3BvF,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,ICFPkF,GCIYC,uBACVC,2BAAgB,cACZhL,OAAQuK,GACRxH,SAAU0H,GACVnC,WAAYqC,GACZjE,QAASkE,IACNK,sBAAY,CACXC,SAAUL,OAGlBM,2BAAgBC,KAAOC,ODChBC,G,uKAXX,OACE,kBAAC,WAAD,CAAUR,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAK9M,UAAU,OACb,kBAAC,EAAD,a,GANM2E,aEGE4I,QACW,cAA7BC,OAAOzD,SAAS0D,UAEe,UAA7BD,OAAOzD,SAAS0D,UAEhBD,OAAOzD,SAAS0D,SAAShD,MACvB,2DCTNiD,IAASC,OAAO,kBAAC,GAAD,MAAQC,SAASC,eAAe,SD0H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxC,MAAK,SAAAyC,GACJA,EAAaC,gBAEdjC,OAAM,SAAAN,GACLO,QAAQP,MAAMA,EAAM/D,a","file":"static/js/main.cc3ccbb2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish}) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n      return (\r\n          <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n              <RenderMenuItem dish={dish}/>\r\n          </div>\r\n      );\r\n  });\r\n  if (props.dishes.isLoading) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  else if (props.dishes.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\"> \r\n                  <div className=\"col-12\">\r\n                      <h4>{props.dishes.errMess}</h4>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"container\">\r\n        <div className =\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {menu}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardImg , CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Nav, NavItem, Button,  Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  } \r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n  render () {\r\n    return(\r\n      <div>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n              <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comments</Button> \r\n          </NavItem>\r\n        </Nav>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comments</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" sm={12}>Rating</Label>\r\n                <Col sm={12}>\r\n                  <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                    className=\"form-control\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                    <option>6</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" sm={12}>Author</Label>\r\n                <Col sm={12}>\r\n                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                      placeholder=\"Author\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".author\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                          required: 'Required',\r\n                          minLength: 'Must be greater than 2 characters',\r\n                          maxLength: 'Must be 15 characters or less'\r\n                      }}\r\n                    />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" sm={12}>Comments</Label>\r\n                <Col sm={12}>\r\n                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                        rows=\"12\"\r\n                        className=\"form-control\" \r\n                        validators={{required}}\r\n                      />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                    </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n  if (dish != null){\r\n    return(\r\n      <FadeTransform in transformProps={{\r\n        exitTransform: 'scale(0.5) translateY(-50%)'\r\n      }}>\r\n        <Card>\r\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  }else {\r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n  if (comments != null) {\r\n    return(\r\n      <div>\r\n        <h4>Comments</h4>\r\n        <ul className = \"list-unstyled\">\r\n          <Stagger in>\r\n            {comments.map((comment) => {\r\n              return (\r\n                <Fade in>\r\n                <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                </li>\r\n                </Fade>\r\n              );\r\n            })}\r\n          </Stagger>\r\n        </ul>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  }else {\r\n    return(\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\nconst  DishDetail = (props) =>  {\r\n  if (props.isLoading) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n  else if (props.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <h4>{props.errMess}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n  else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className =\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n          <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }else {\r\n    return(\r\n      <div></div>\r\n    );\r\n  } \r\n}\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n    }\r\n    toggleNav() {\r\n        this.setState({\r\n        isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)} >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}){\r\n        return(\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Stagger in>\r\n                    <Fade in >\r\n                        <Media tag=\"li\">\r\n                            <Media left middle>\r\n                                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                            </Media>\r\n                            <Media body className=\"ml-5\">\r\n                                <Media heading>{leader.name}</Media>\r\n                                <p>{leader.designation}</p>\r\n                                <p>{leader.description}</p>\r\n                            </Media>\r\n                        </Media>\r\n                    </Fade>\r\n                </Stagger>\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction Rendering({props}){\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n        <div className=\"col-12 m-1\" key={leader.id}>\r\n            <RenderLeader key={leader.id} leader={leader} />\r\n        </div>);\r\n    });\r\n    if (props.leaders.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            leaders\r\n        );\r\n    } \r\n}\r\n\r\nfunction About(props) { \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Rendering props = {props} />\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\nexport default About; ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  return fetch(baseUrl + 'comments', {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n    throw error;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading());\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addleaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addleaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  newFeedback.id= newFeedback.length;\r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response.payload)))\r\n  .catch(error =>  { console.log('post Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n});\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersErrMess={this.props.leaders.errMess}\r\n      />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true, errMess: null, promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, \r\n    action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n\r\nexport const feedback = (state = {feedback:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            return { ...state, feedback: state.feedback.concat(feedback)};\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { Component }  from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}